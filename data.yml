profiles:
  - name: telegram
    links:
      - https://t.me/orsinium
  - name: github
    links:
      - https://github.com/orsinium
open_source:
  - name: TextDistance
    links:
      - https://github.com/orsinium/textdistance
    info: >
      Compute the distance between sequences.
      30+ algorithms, pure python implementation,
      common interface, optional external libs usage.
    tags:
      - python
  - name: DjBurger
    links:
      - https://github.com/orsinium/djburger
    info: Framework for safe and maintainable web-projects.
    tags:
      - python
      - django
  - name: Deal
    links:
      - https://github.com/orsinium/deal
    info: Design by contract for Python with many validators support.
    tags:
      - python
  - name: DjBrut
    links:
      - https://github.com/orsinium/django-bruteforce-protection
    info: Bruteforce protection for Django projects based on Redis.
    tags:
      - python
      - django
  - name: Homoglyphs
    links:
      - https://github.com/orsinium/homoglyphs
    info: Get similar letters, convert to ASCII, detect possible languages and UTF-8 group.
    tags:
      - python
  - name: Awesome Generator
    info: Generate awesome list over Github API
    links:
      - https://github.com/orsinium/awesome-generator
    tags:
      - go
  - name: Generated Awesomeness
    info: List of autogenerated awesome lists.
    links:
      - https://github.com/orsinium/generated-awesomeness
  - name: Send File Bot
    info: Telegram bot for sending files to chat or channel by cron.
    links:
      - https://github.com/orsinium/send-file-bot
    tags:
      - python
      - telegram
  - name: RuTimeParser
    links:
      - https://github.com/orsinium/rutimeparser
    info: Recognize date and time in Russian text and return datetime.datetime.
    tags:
      - python
  - name: Zabbix Healthcheck
    info: Flask HealthCheck support for Zabbix
    links:
      - https://github.com/orsinium/zabbix-healthcheck
    tags:
      - python
      - zabbix
      - monitoring
  - name: DepHell
    tags:
      - python
      - packaging
    info: >
      Dependency resolution and requirements converter for Python.
      DepHell in progress yet, but it will be the great project! Check it out.
    class: text-white bg-dark
    links:
      - https://github.com/orsinium/dephell
little_projects:
  - name: poetry-setup
    info: Generate setup.py (setuptools) from pyproject.toml (poetry)
    links:
      - https://github.com/orsinium/poetry-setup
    tags:
      - python
      - packaging
  - name: install-requires
    info: Convert requirements between formats.
    links:
      - https://github.com/orsinium/install-requires
    tags:
      - python
      - packaging
  - name: ElastAlert Configuring
    info: ElastAlert daemonizing and some rules for filebeat and metricbeat
    links:
      - https://github.com/orsinium/elastalert-configuring
    tags:
      - elasic
      - monitoring
  - name: python-syslog-logstash
    info: Python Logger + RSysLog + Logstash. Demo over docker containers.
    links:
      - https://github.com/orsinium/python-syslog-logstash
    tags:
      - python
      - docker
      - rsyslog
      - elastic
  - name: Django Google Play permissions
    info: Django package for getting permissions for Android app from Google Play.
    links:
      - https://github.com/orsinium/django-google-play-permissions
    tags:
      - python
      - docker
  - name: hh.ru
    info: hh.ru vacancies analyze by different params
    links:
      - https://github.com/orsinium/hh
    tags:
      - python
      - jupyter
  - name: Swag
    info: "ᙏáḱє ‡ɘχτ !η ẃɨŧ¢н-ħ∅υѕé ѕ†ɏƖε (Ɛñ9ĺïś♄ & Řᵾśѕ!áη)"
    links:
      - https://github.com/orsinium/swag
    tags:
      - python
  - name: Pathfinder Dice
    info: A library for evaluating dice notation for Pathfinder RPG
    links:
      - https://github.com/orsinium/pathfinder_dice
    tags:
      - python
  - name: DjChoices
    info: Good choices for Django
    links:
      - https://github.com/orsinium/djchoices
    tags:
      - python
      - django
  - name: USATU CTF
    info: tasks, files, write-ups from my university CTF.
    links:
      - https://github.com/orsinium/usatu-ctf
    tags:
      - security
channels:
  - name: ITGram
    lang: rus
    links:
      - https://t.me/itgram_channel
    info: "All about development: best practice, articles, useful tools, libs etc."
    tags:
      - python
      - go
      - monitoring
      - security
  - name: RPG Dump
    lang: ['eng', 'rus']
    links:
      - https://t.me/rpgdump
    info: Pathfinder, board games
  - name: Default City 2
    lang: rus
    links:
      - https://t.me/default_city2
    info: Saint Petersburg and people around me
pull_requests:
  - name: delorean
    info: Fixed ISO date parsing
    date: 2018-10-08
    links:
      - https://github.com/myusuf3/delorean/pull/103
  - name: python-json-logger
    info: Fixed and improved setup.py
    date: 2018-10-08
    links:
      - https://github.com/madzak/python-json-logger/pull/71
  - name: pylama
    info: Eradicate support and Python 3.7 compatibility.
    date: 2018-09-28
    links:
      - https://github.com/klen/pylama/pull/129
  - name: luigi
    info: Added configuring of logging via TOML config.
    date: 2018-08-07
    links:
      - https://github.com/spotify/luigi/pull/2483
  - name: isort
    info: Added requirements.txt and Pipfile support
    date: 2018-07-22
    links:
      - https://github.com/timothycrosley/isort/pull/715
  - name: mongoengine
    info: Added DateField support
    date: 2018-07-20
    links:
      - https://github.com/MongoEngine/mongoengine/pull/1825
  - name: luigi
    info: Project configuring via TOML format.
    date: 2018-07-13
    links:
      - https://github.com/spotify/luigi/pull/2457
  - name: mixer
    info: Added unregister_middleware function.
    date: 2018-07-04
    links:
      - https://github.com/klen/mixer/pull/101
  - name: requirementslib
    info: Improved Pipfile.lock parsing.
    date: 2018-06-16
    links:
      - https://github.com/sarugaku/requirementslib/pull/9
  - name: hello-world
    info: Added esoteric language named YoptaScript.
    date: 2018-04-25
    links:
      - https://github.com/leachim6/hello-world/pull/453
  - name: choosealicense.com
    info: Updated CC-BY license name.
    date: 2018-04-18
    links:
      - https://github.com/github/choosealicense.com/pull/583
  - name: Opened PRs
    info: "Some of my PRs isn't accepted yet."
    class: text-white bg-dark
    links:
      - https://github.com/search?q=is%3Apr+author%3Aorsinium+is%3Aopen
videos:
  - name: "The bees, the trees, the types, the typing"
    lang: rus
    date: 2018-12-11
    info: "An interactive presentation about data structures in Python's stdlib."
    tags:
      - python
    links:
      - https://youtu.be/zD-qBcvBSik
      - https://piterpy.timepad.ru/event/863647/
  - name: "Logging!"
    lang: eng
    date: 2018-12-06
    info: "My first English talk. Sorry about that."
    tags:
      - python
    links:
      - https://youtu.be/4NEAwhgZkU4
      - https://piterpy.timepad.ru/event/804746/
  - name: "Luigi: let's build perfect pipeline"
    lang: rus
    date: 2018-10-27
    info: "Presentation about Spotify's framework Luigi."
    tags:
      - python
    links:
      - https://youtu.be/VeDXCWTH9j8?t=7590
      - https://www.canva.com/design/DADG59zIK2E/gQMnnLb_xW3zQ0BVuHDN8w/view
      - https://www.meetup.com/PyData-SPb/events/255421042/
  - name: "OSS: why and how?"
    date: 2018-10-20
    info: "Presentation about Open Source from Hacktoberfest 2018."
    links:
      - https://www.canva.com/design/DADGaghkaAQ/akZAdzE6mBEh6xTfsMrTDw/view
      - https://piterpy.timepad.ru/event/826118/
  - name: Python packaging
    date: 2018-06-29
    info: "Presentation from PiterPy Meetup #6."
    tags:
      - python
      - packaging
    links:
      - https://www.canva.com/design/DAC7K2hLOBE/F2qhLJ1TFh1WghlH2PyZXQ/view
      - https://github.com/orsinium/notes/blob/master/notes-en/python-packaging.md
      - https://piterpy.timepad.ru/event/666491/
  - name: Code, Burgers & Magic
    lang: rus
    date: 2018-01-18
    info: Presentation from UfaPy.
    tags:
      - python
    links:
      - https://youtu.be/Htg3FE3GbJ4
      - https://www.canva.com/design/DACstli23Jk/JRUrOHV6sY3jX4QsZR8TOg/view
  - name: Farfor Monitoring
    lang: rus
    date: 2017-10-14
    info: Presentation from UfaDevConf about monitoring ecosystem in Smena Team.
    tags:
      - monitoring
    links:
      - https://youtu.be/uSVu1Z7fKw4
      - http://dc.ufacoder.com/
  - name: Vulner
    date: 2016-07-22
    info: >
      Presentation for FSTEC about my security platform.
      This platform is similar to vulners.com, but more powerful and useful.
      The project is frozen now.
    tags:
      - security
    links:
      - https://www.canva.com/design/DAB2LyB3Pi8/DBb-0AxC0s7-SUn5YERQ2w/view
  - name: Blockchain
    date: 2017-07
    info: Internal presentation for Smena Team about blockchain technology.
    tags:
      - crypto
    links:
      - https://www.canva.com/design/DACc9aAGyTw/SlVeFsCFODCv6LsmPUx98A/view
artcles:
  - name: About iterators and iterables
    lang: eng
    links:
      - https://github.com/orsinium/notes/blob/master/notes-en/python-iterators.md
  - name: Python packaging for your team
    lang: eng
    info: Article about Python packaging ecosystem.
    links:
      - https://github.com/orsinium/notes/blob/master/notes-en/python-packaging.md
other:
  - name: Podcast about blockchain
    lang: rus
    info: >
      About blockchain technology, cryptocurrencies,
      history and future of decentralized systems.
    links:
      - https://t.me/itgram_channel/21
  - name: Stickers
    lang: ['eng', 'rus']
    info: I draw and print round vector stickers with programming jokes.
    links:
      - https://stickers.life4web.ru/
  - name: Dipper3
    lang: rus
    info: Telegram bot with many features and lightweight dialog system
    links:
      - https://dipper3.life4web.ru/
  - name: alert1
    info: My CTF team. CTF (Capture The Flag) — information security contests.
    links:
      - https://ctftime.org/team/24077

work:
  - name: 1. Life4Web
    image: life4.png
    date: 2016-01 &mdash; 2017-05
    info: Founder, Django web developer (Python).
  - name: 2. Smena
    image: smena.jpg
    date: 2017-05 &mdash; 2018-06
    info: Django web developer (Python).
    links:
      - http://smena.space/
  - name: 3. Cindicator
    image: cnd.jpg
    date: 2018-06 &mdash; now
    info: Senior Python developer, architector.
    links:
      - https://cindicator.com/


skills:

  - name: Languages
    content:
      - name: Python
        info: >
          This is my favorite language. I know source code of almost all stdlib,
          have many Python-based Open Source projects and public talks.
          You can discover them above.
      - name: Go
        info: >
          This is my second favorite language. It has quite a different philosophy
          rather than Python and it's great. Go gives you superpower
          that allows you to make blazing fast services and tools.
          I've just started using it, but already has
          [some projects](https://github.com/orsinium?tab=repositories&language=go).
      - name: PHP
        info: >
          Ok, I know PHP. And hate it. This is my first web programming language,
          I've known it very well, but I try to avoid it. Also, I have public talk
          why PHP is bad. However, I know it and can read PHP code.
      - name: HTML, CSS & LESS
        info: >
          Yeah, this is not programming languages, but I know them, of course.
          I like the web so much, so I couldn't miss some frontend basic things.
          The layout of this site is quite nice, isn't it?
          This is just Bootstrap 4, but still.
      - name: SQL
        info: >
          Most of the time I use ORM or query builders, of course. 
          But SQL knowledge is required for effective queries optimization and debugging.
          Luckily, a huge PHP background gives me these skills (PHP has no good ORM).

  - name: Storages
    content:
      - name: PostgreSQL
        info: >
          I've completed [DBA1, DBA2, and DBA3](https://postgrespro.com/education)
          courses from Postgres Professionals company. So I little bit know how to set up,
          optimize and replicate PostgreSQL database.
      - name: Redis
        info: >
          I like this storage for speed and simplicity. For example, my
          [bruteforce protection tool](https://github.com/orsinium/django-bruteforce-protection)
          works on top of it.
      - name: MySQL
        info: >
          Unfortunately, in Smena we lived with MySQL, so I know how to make
          replication and backups, how to set up a server and debug strange behavior.
      - name: MongoDB
        info: >
          I know how to set up and use it for the best security and performance,
          how to build good documents structure. BTW, I'm
          [mongoengine contributor](https://github.com/MongoEngine/mongoengine/pull/1825).
      - name: ElasticSearch
        info: >
          This is very fast storage with cool query syntax. In Smena we use it
          for data caching in ERP and for
          [logs storage](https://github.com/orsinium/python-syslog-logstash).

  - name: Frameworks
    content:
      - name: Django
        info: >
          I like this framework! It's quite pythonic. I know it's source code
          better than the birthdays of my relatives. However Django has some
          issues for big projects, so I've made [DjBurger](https://github.com/orsinium/djburger).
      - name: Flask
        info: >
          This is the most popular web framework. An old, a little bit slow, but beautiful.
          So I know it very good, but I prefer to use more fast alternatives like
          [Sanic](https://github.com/huge-success/sanic). It's more modern and fast.
      - name: Django REST Framework
        info: >
          I have some experience with DRF. This framework has some disadvantages,
          but also it quite simple and popular.
      - name: Nameko
        info: >
          It's the framework for RPC based microservices. I've worked with it and know
          how it works and how to use it for best performance.
      - name: Luigi
        info: >
          I'm [Luigi contributor](https://github.com/spotify/luigi/pulls?utf8=%E2%9C%93&q=is%3Apr+author%3Aorsinium)
          and know everything about how it works.
          I've made all ML pipeline in Cindicator based on Luigi, and this is
          working on production without any issues.
          Also, I have [public talk](#talks) about it.

  - name: ORMs
    content:
      - name: Django ORM
        info: >
          This is the best ORM I've ever used.
          I know Django ORM source code and how to build and
          optimize queries of any difficulty level.
      - name: SQLAlchemy
        info: >
          I work so much with it, but also I a little bit don't like it. 
          This is an excessively low-level framework that doesn't intend 
          to be used directly. I prefer Flask-SQLAlchemy and SQLAlchemy-mixins. 
      - name: Peewee
        info: >
          I use this ORM every time when I can't use Django ORM, but can avoid
          SQLAlchemy.

  - name: Testing
    content:
      - name: PyTest
        info: >
          This is a great tool for fast and beautiful testing. 
          I use it in every project where it is possible. 
          I like to write tests because they helps to change the code without fear. 
      - name: Locust
        info: >
          When I write load tests I use Locust. This is a simple Python-based
          load testing framework with good performance.
      - name: Unittest
        info: >
          Unittest used almost in all my open source projects. For example, in
          [textdistance](https://github.com/orsinium/textdistance/blob/master/tests/common.py)
          and [DjBurger](https://github.com/orsinium/djburger/tree/master/tests).
          So, it can't scare me.

  - name: DevOps
    content:
      - name: Docker 
        info: >
          Docker -- most popular container system that allows you to develop and
          deploy your services faster and simpler. I've packed in Docker all
          infrastructure of Farfor (when I worked in Smena), all ML Pipeline
          and trading system in Cindicator and this all works
          perfectly on all environments from development to production.
      - name: Docker-compose
        info: >
          For the development environment, I use docker-compose, 
          because it is the most simple way to orchestrate docker containers.
          This one of the tools that I use every day.
      - name: Elastic Stack
        info: >
          Elastic Stack (ex. ELK) is the huge monitoring system to aggregate
          logs, messages, and state from all parts of the system. It includes 
          Elastic Search, Logstash, Kibana, MetricBeat, FileBeat etc.
          I can monitor with it all infrastructure.
          You can find my demo stand of this system in
          [python-syslog-logstash](https://github.com/orsinium/python-syslog-logstash)
          repository.
      - name: Sentry
        info: >
          Sentry is a useful solution for error messages aggregation. 
          I use it for 4 years and know how to build fast and reliable 
          errors processing pipeline. Also, I've 
          [contributed to sentry](https://github.com/getsentry/raven-python/pull/1306) too. 
      - name: Zabbix
        info: >
          Zabbix is one of the most popular tools for servers and services
          monitoring. I have huge (and a little bit painful) experience with it.
          Also, I've written [zabbix-healthcheck](https://github.com/orsinium/zabbix-healthcheck)
          plugin that adds Flask applications monitor into Zabbix.
      - name: New Relic
        info: >
          New Relic is a useful SaaS solution for performance monitoring of
          Python web applications. I know how to integrate it into projects,
          monitor state of the system and improve performance and load.

  - name: Data Analisys
    content:
      - name: Pandas
        info: >
          This is the secret ingredient that improved the performance of the 
          report system in Smena team. It has gotten faster from 12 hours to 
          90 seconds. Also, this is the main instrument of my data researches.
      - name: NumPy
        info: .
      - name: Matplotlib & Seaborn
        info: .
      - name: Word2Vec
        info: .
      - name: Jupyter
        info: .

  - name: Libraries
    content:
      - name: Jinja2
        info: This is my favorite template engine. This page generated by Jinja2.
      - name: Requests
        info: >
          I know this tool very well. However, for dozens of requests, 
          I prefer asynchronous solutions like aiohttp. 
      - name: Attrs
        info: >
          Dataclasses -- a beautiful conception that I use in my projects 
          every day. For example, in 
          [dephell](https://github.com/orsinium/dephell/tree/master/dephell/models). 
          It helps to write beautiful and fast code. 
          So, I know almost everything about this lib 
          (and about dataclasses from Python 3.7 too). 
      - name: Celery
        info: >
          I prefer other solutions like rq and huey, but celery is the biggest,
          most popular and only one good that can work with RabbitMQ,
          so I have huge experience with it.
      - name: Telethon
        info: >
          Telegram messenger is very popular now, so I have experience in
          writing bots and direct working with telegram's protocol (MTProto).

anchors:
  - name: Channels
    link: channels
  - name: Open Source
    link: oss
  - name: Little Projects
    link: projects
  - name: Pull Requests
    link: prs
  - name: Public Talks
    link: talks
  - name: Other
    link: other
  - name: Skills
    link: skills
  - name: Work
    link: work


buttons:
  - trigger: "/pull/"
    icon: fab fa-github
    text: pull request

  - trigger: "github.com/orsinium/notes"
    icon: far fa-newspaper
    text: article

  - trigger: "github.com/search"
    icon: fas fa-search
    text: search

  - trigger: "github.com"
    icon: fab fa-github
    text: repository

  - trigger: "/itgram_channel/"
    icon: fab fa-telegram
    text: post

  - trigger: "t.me/orsinium"
    icon: fab fa-telegram
    text: text me!

  - trigger: "t.me/"
    icon: fab fa-telegram
    text: channel

  - trigger: "youtu.be/"
    icon: fab fa-youtube
    text: video

  - trigger: "canva.com/"
    icon: fas fa-eye
    text: slides

  - trigger: "life4web.ru/"
    icon: fas fa-info-circle
    text: info

  - trigger: "timepad.ru/"
    icon: fas fa-map-marker-alt
    text: event

  - trigger: "meetup.com/"
    icon: fas fa-map-marker-alt
    text: event

  - trigger: ""
    icon: fas fa-globe-americas
    text: page
